// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketSystem.Api.Data;

#nullable disable

namespace TicketSystem.Api.Migrations
{
    [DbContext(typeof(TicketDbContext))]
    partial class TicketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TicketSystem.Api.Entities.Booker", b =>
                {
                    b.Property<int>("BookerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BookerPwd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CardId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasMaxLength(10)
                        .HasColumnType("tinyint(10)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNum")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("TimeOfRegister")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BookerId");

                    b.ToTable("Bookers");

                    b.HasData(
                        new
                        {
                            BookerId = 1,
                            BookerPwd = "123456",
                            CardId = "453009200001013710",
                            DateOfBirth = new DateTime(2000, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "李",
                            Gender = 1,
                            IsDeleted = false,
                            LastName = "黑沙",
                            PhoneNum = "13600291522",
                            TimeOfRegister = new DateTime(2022, 3, 25, 3, 19, 39, 297, DateTimeKind.Local).AddTicks(6207),
                            UserName = "黑沙"
                        });
                });

            modelBuilder.Entity("TicketSystem.Api.Entities.Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EndTerminal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("StartTerminal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("StopStation")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TrainName")
                        .HasColumnType("longtext");

                    b.HasKey("LineId");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            LineId = 1,
                            EndTerminal = "哈尔滨站",
                            StartTerminal = "广州站",
                            StopStation = "广州站,武汉站,北京站,哈尔滨站"
                        },
                        new
                        {
                            LineId = 2,
                            EndTerminal = "成都站",
                            StartTerminal = "广州站",
                            StopStation = "广州站,重庆站,成都站"
                        },
                        new
                        {
                            LineId = 3,
                            EndTerminal = "上海站",
                            StartTerminal = "广州站",
                            StopStation = "广州站,武汉站,上海站"
                        },
                        new
                        {
                            LineId = 4,
                            EndTerminal = "哈尔滨站",
                            StartTerminal = "上海站",
                            StopStation = "上海站,北京站,哈尔滨站"
                        },
                        new
                        {
                            LineId = 5,
                            EndTerminal = "成都站",
                            StartTerminal = "上海站",
                            StopStation = "上海站,武汉站,重庆站,成都站"
                        },
                        new
                        {
                            LineId = 6,
                            EndTerminal = "广州站",
                            StartTerminal = "上海站",
                            StopStation = "上海站,武汉站,广州站"
                        },
                        new
                        {
                            LineId = 7,
                            EndTerminal = "广州站",
                            StartTerminal = "哈尔滨站",
                            StopStation = "哈尔滨站,北京站,武汉站,广州站"
                        },
                        new
                        {
                            LineId = 8,
                            EndTerminal = "上海站",
                            StartTerminal = "哈尔滨站",
                            StopStation = "哈尔滨站,北京站,上海站"
                        },
                        new
                        {
                            LineId = 9,
                            EndTerminal = "成都站",
                            StartTerminal = "哈尔滨站",
                            StopStation = "哈尔滨站,北京站,武汉站,重庆站,成都站"
                        },
                        new
                        {
                            LineId = 10,
                            EndTerminal = "广州站",
                            StartTerminal = "成都站",
                            StopStation = "成都站,重庆站,广州站"
                        },
                        new
                        {
                            LineId = 11,
                            EndTerminal = "上海站",
                            StartTerminal = "成都站",
                            StopStation = "成都站,重庆站,武汉站,上海站"
                        },
                        new
                        {
                            LineId = 12,
                            EndTerminal = "哈尔滨站",
                            StartTerminal = "成都站",
                            StopStation = "成都站,重庆站,武汉站,北京站,哈尔滨站"
                        });
                });

            modelBuilder.Entity("TicketSystem.Api.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("BookerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EndTerminal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EndTerminalId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("StartTerminal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StartTerminalId")
                        .HasColumnType("int");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.Property<string>("TrainName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TicketSystem.Api.Entities.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsTerminal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StationId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            IsTerminal = true,
                            Latitude = 23.148721999999999,
                            Longitude = 113.25765199999999,
                            StationName = "广州站"
                        },
                        new
                        {
                            StationId = 2,
                            IsTerminal = false,
                            Latitude = 29.549520000000001,
                            Longitude = 106.547546,
                            StationName = "重庆站"
                        },
                        new
                        {
                            StationId = 3,
                            IsTerminal = false,
                            Latitude = 39.904217000000003,
                            Longitude = 116.427162,
                            StationName = "北京站"
                        },
                        new
                        {
                            StationId = 4,
                            IsTerminal = true,
                            Latitude = 31.249600999999998,
                            Longitude = 121.455704,
                            StationName = "上海站"
                        },
                        new
                        {
                            StationId = 5,
                            IsTerminal = true,
                            Latitude = 30.629023,
                            Longitude = 104.154915,
                            StationName = "成都站"
                        },
                        new
                        {
                            StationId = 6,
                            IsTerminal = true,
                            Latitude = 45.761088999999998,
                            Longitude = 126.631905,
                            StationName = "哈尔滨站"
                        },
                        new
                        {
                            StationId = 7,
                            IsTerminal = false,
                            Latitude = 30.607346,
                            Longitude = 114.42449999999999,
                            StationName = "武汉站"
                        });
                });

            modelBuilder.Entity("TicketSystem.Api.Entities.Train", b =>
                {
                    b.Property<int>("TrainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TrainName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("TypeOfTrain")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("TrainId");

                    b.HasIndex("LineId");

                    b.HasIndex("TrainName")
                        .IsUnique();

                    b.ToTable("Trains");

                    b.HasData(
                        new
                        {
                            TrainId = 1,
                            LineId = 1,
                            Time = "07:41,09:06,15:03,21:01",
                            TrainName = "D112",
                            TypeOfTrain = "D"
                        },
                        new
                        {
                            TrainId = 2,
                            LineId = 2,
                            Time = "10:16,17:43,19:17",
                            TrainName = "D1849",
                            TypeOfTrain = "D"
                        },
                        new
                        {
                            TrainId = 3,
                            LineId = 3,
                            Time = "07:50,16:38,04:29(+1)",
                            TrainName = "K528",
                            TypeOfTrain = "K"
                        },
                        new
                        {
                            TrainId = 4,
                            LineId = 4,
                            Time = "09:33,16:12,21:36",
                            TrainName = "G1204",
                            TypeOfTrain = "G"
                        },
                        new
                        {
                            TrainId = 5,
                            LineId = 5,
                            Time = "06:32,12:00,18:44,20:42",
                            TrainName = "D636",
                            TypeOfTrain = "D"
                        },
                        new
                        {
                            TrainId = 6,
                            LineId = 6,
                            Time = "19:15,10:12(+1),17:21(+1)",
                            TrainName = "K527",
                            TypeOfTrain = "K"
                        },
                        new
                        {
                            TrainId = 7,
                            LineId = 7,
                            Time = "07:41,10:06,15:03,21:01",
                            TrainName = "D728",
                            TypeOfTrain = "D"
                        },
                        new
                        {
                            TrainId = 8,
                            LineId = 8,
                            Time = "08:52,15:01,21:40",
                            TrainName = "G1202",
                            TypeOfTrain = "G"
                        },
                        new
                        {
                            TrainId = 9,
                            LineId = 9,
                            Time = "19:15,06:12(+1),17:21(+1),23:50(+1)",
                            TrainName = "K518",
                            TypeOfTrain = "K"
                        },
                        new
                        {
                            TrainId = 10,
                            LineId = 10,
                            Time = "07:15,15:12,23:21",
                            TrainName = "K488",
                            TypeOfTrain = "K"
                        },
                        new
                        {
                            TrainId = 11,
                            LineId = 11,
                            Time = "06:10,11:27,15:25,19:27",
                            TrainName = "G2195",
                            TypeOfTrain = "G"
                        },
                        new
                        {
                            TrainId = 12,
                            LineId = 12,
                            Time = "18:15,05:12(+1),16:21(+1),22:50(+1)",
                            TrainName = "K546",
                            TypeOfTrain = "K"
                        });
                });

            modelBuilder.Entity("TicketSystem.Api.Entities.Train", b =>
                {
                    b.HasOne("TicketSystem.Api.Entities.Line", "Line")
                        .WithMany("Trains")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("TicketSystem.Api.Entities.Line", b =>
                {
                    b.Navigation("Trains");
                });
#pragma warning restore 612, 618
        }
    }
}
