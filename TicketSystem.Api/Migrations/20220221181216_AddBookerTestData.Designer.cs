// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketSystem.Api.Data;

#nullable disable

namespace TicketSystem.Api.Migrations
{
    [DbContext(typeof(TicketDbContext))]
    [Migration("20220221181216_AddBookerTestData")]
    partial class AddBookerTestData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TicketSystem.Api.Entities.Booker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BookerPwd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BookerWx")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasMaxLength(10)
                        .HasColumnType("tinyint(10)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNum")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("TimeOfRegister")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Bookers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99e5b121-ef55-4e35-8d72-89d5622b73d1"),
                            BookerPwd = "123456",
                            BookerWx = "1",
                            DateOfBirth = new DateTime(2000, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "李",
                            Gender = 1,
                            IsDeleted = false,
                            LastName = "黑沙",
                            PhoneNum = "12345678901",
                            TimeOfRegister = new DateTime(2022, 2, 22, 2, 12, 16, 193, DateTimeKind.Local).AddTicks(9309),
                            UserName = "黑沙"
                        });
                });

            modelBuilder.Entity("TicketSystem.Api.Entities.Station", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsTerminal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b501cb3-d168-4cc0-b375-48fb33f318a4"),
                            IsTerminal = true,
                            StationName = "广州站"
                        },
                        new
                        {
                            Id = new Guid("7eaa532c-1be5-472c-a738-94fd26e5fad6"),
                            IsTerminal = false,
                            StationName = "重庆站"
                        },
                        new
                        {
                            Id = new Guid("72457e73-ea34-4e02-b575-8d384e82a481"),
                            IsTerminal = true,
                            StationName = "北京站"
                        },
                        new
                        {
                            Id = new Guid("b091b148-8fc7-4ce5-a6c5-c61dbbb3f91f"),
                            IsTerminal = true,
                            StationName = "上海站"
                        },
                        new
                        {
                            Id = new Guid("0846ff99-37ac-4849-804b-1eefac46d651"),
                            IsTerminal = false,
                            StationName = "成都站"
                        },
                        new
                        {
                            Id = new Guid("07c4638c-48b7-4783-88a5-58f47e2a0458"),
                            IsTerminal = true,
                            StationName = "哈尔滨站"
                        });
                });

            modelBuilder.Entity("TicketSystem.Api.Entities.Train", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("TrainName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("TypeOfTrain")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Trains");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc2a984d-cd07-4329-9b22-84a5c0185ea7"),
                            TrainName = "K48",
                            TypeOfTrain = "K"
                        },
                        new
                        {
                            Id = new Guid("e185afad-aa89-4d4e-bba0-391ce821ae9d"),
                            TrainName = "K11",
                            TypeOfTrain = "K"
                        },
                        new
                        {
                            Id = new Guid("99e5b121-ef55-4e35-8d72-89d5622b73db"),
                            TrainName = "D1868",
                            TypeOfTrain = "D"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
